@     0s  Reading from file ivybench/ex/vmt/lockserv_automaton.vmt
|node|=?		(running: frpo)
@     0s  (building bdds for ext:recv_grant)
adding varbool: held:e0 := held:e0 <-> 8
adding varbool: __held:e0 := __held:e0 <-> 9
@     0s  (building bdds for ext:unlock)
@     0s  (building bdds for ext:recv_lock)
@     0s  (building bdds for ext:recv_unlock)
@     0s  (building bdds for ext:lock)
adding varbool: en_noop:e0 := en_noop:e0 <-> 42
adding varbool: en_ext:lock:e0 := en_ext:lock:e0 <-> 43
adding varbool: en_ext:recv_unlock:e0 := en_ext:recv_unlock:e0 <-> 44
adding varbool: en_ext:recv_lock:e0 := en_ext:recv_lock:e0 <-> 45
adding varbool: en_ext:unlock:e0 := en_ext:unlock:e0 <-> 46
adding varbool: en_ext:recv_grant:e0 := en_ext:recv_grant:e0 <-> 47
0 -> lock_msg(n3)
1 -> __lock_msg(n3)
2 -> lock_msg(n2)
3 -> __lock_msg(n2)
4 -> lock_msg(n1)
5 -> __lock_msg(n1)
6 -> lock_msg(n0)
7 -> __lock_msg(n0)
8 -> held:e0
9 -> __held:e0
10 -> unlock_msg(n3)
11 -> __unlock_msg(n3)
12 -> unlock_msg(n2)
13 -> __unlock_msg(n2)
14 -> unlock_msg(n1)
15 -> __unlock_msg(n1)
16 -> unlock_msg(n0)
17 -> __unlock_msg(n0)
18 -> (V__fml:n = n0)
19 -> (V__fml:n = n1)
20 -> (V__fml:n = n2)
21 -> (V__fml:n = n3)
22 -> __grant_msg(n0)
23 -> __grant_msg(n1)
24 -> __grant_msg(n2)
25 -> __grant_msg(n3)
26 -> __holds_lock(n3)
27 -> holds_lock(n3)
28 -> __holds_lock(n2)
29 -> holds_lock(n2)
30 -> __holds_lock(n1)
31 -> holds_lock(n1)
32 -> __holds_lock(n0)
33 -> holds_lock(n0)
34 -> grant_msg(n3)
35 -> grant_msg(n2)
36 -> grant_msg(n1)
37 -> grant_msg(n0)
38 -> (V__fml:sender = n0)
39 -> (V__fml:sender = n1)
40 -> (V__fml:sender = n2)
41 -> (V__fml:sender = n3)
42 -> en_noop:e0
43 -> en_ext:lock:e0
44 -> en_ext:recv_unlock:e0
45 -> en_ext:recv_lock:e0
46 -> en_ext:unlock:e0
47 -> en_ext:recv_grant:e0
BEGIN_VARLABELS
0	lock_msg:e0(`node:e0:3`)
1	__lock_msg:e0(`node:e0:3`)
2	lock_msg:e0(`node:e0:2`)
3	__lock_msg:e0(`node:e0:2`)
4	lock_msg:e0(`node:e0:1`)
5	__lock_msg:e0(`node:e0:1`)
6	lock_msg:e0(`node:e0:0`)
7	__lock_msg:e0(`node:e0:0`)
8	held:e0
9	__held:e0
10	unlock_msg:e0(`node:e0:3`)
11	__unlock_msg:e0(`node:e0:3`)
12	unlock_msg:e0(`node:e0:2`)
13	__unlock_msg:e0(`node:e0:2`)
14	unlock_msg:e0(`node:e0:1`)
15	__unlock_msg:e0(`node:e0:1`)
16	unlock_msg:e0(`node:e0:0`)
17	__unlock_msg:e0(`node:e0:0`)
18	(V__fml:n:e0 = `node:e0:0`)
19	(V__fml:n:e0 = `node:e0:1`)
20	(V__fml:n:e0 = `node:e0:2`)
21	(V__fml:n:e0 = `node:e0:3`)
22	__grant_msg:e0(`node:e0:0`)
23	__grant_msg:e0(`node:e0:1`)
24	__grant_msg:e0(`node:e0:2`)
25	__grant_msg:e0(`node:e0:3`)
26	__holds_lock:e0(`node:e0:3`)
27	holds_lock:e0(`node:e0:3`)
28	__holds_lock:e0(`node:e0:2`)
29	holds_lock:e0(`node:e0:2`)
30	__holds_lock:e0(`node:e0:1`)
31	holds_lock:e0(`node:e0:1`)
32	__holds_lock:e0(`node:e0:0`)
33	holds_lock:e0(`node:e0:0`)
34	grant_msg:e0(`node:e0:3`)
35	grant_msg:e0(`node:e0:2`)
36	grant_msg:e0(`node:e0:1`)
37	grant_msg:e0(`node:e0:0`)
38	(V__fml:sender:e0 = `node:e0:0`)
39	(V__fml:sender:e0 = `node:e0:1`)
40	(V__fml:sender:e0 = `node:e0:2`)
41	(V__fml:sender:e0 = `node:e0:3`)
42	en_noop:e0
43	en_ext:lock:e0
44	en_ext:recv_unlock:e0
45	en_ext:recv_lock:e0
46	en_ext:unlock:e0
47	en_ext:recv_grant:e0
END_VARLABELS
---------0-0-0-0-0----00000-0-0-0---------------  1
---------1-1-0-0-0----00000-0-0-0---------------  1
---------1-0-1-0-0----00000-0-0-0---------------  1
---------1-0-0-1-0----00000-0-0-0---------------  1
---------1-0-0-0-1----00000-0-0-0---------------  1
---------1-0-0-0-0----10000-0-0-0---------------  1
---------1-0-0-0-0----01000-0-0-0---------------  1
---------1-0-0-0-0----00100-0-0-0---------------  1
---------1-0-0-0-0----00010-0-0-0---------------  1
---------1-0-0-0-0----00001-0-0-0---------------  1
---------1-0-0-0-0----00000-1-0-0---------------  1
---------1-0-0-0-0----00000-0-1-0---------------  1
---------1-0-0-0-0----00000-0-0-1---------------  1
