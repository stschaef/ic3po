# A: \exists n ~epEQe(n)
~epEQe(`n1`) || ~epEQe(`n2`)
# B: \forall n . held(n) -> \exists n' ~epLTe(n')
~held(`n1`) || ~epLTe(`n1`)  || ~epLTe(`n2`)
~held(`n2`) || ~epLTe(`n1`)  || ~epLTe(`n2`)
# C: \forall n . ep(n) = e -> \exists n'. ~epLTe(n') 
~epEQe(`n1`) || ~epLTe(`n1`) || ~epLTe(`n2`)
~epEQe(`n2`) || ~epLTe(`n1`) || ~epLTe(`n2`)
# D: \forall n . lockedE(n) -> \exists n' . ~epLTe(n')
~epLTe(`n1`) || ~epLTe(`n2`) || ~lockedE(`n1`)
~epLTe(`n1`) || ~epLTe(`n2`) || ~lockedE(`n2`)
# E. \forall n1 . \forall n2 . (n1 != n2) -> (epEQe(n1) && epLTe(n2)) -> ~transferE(n1)
~epEQe(`n1`) || ~epLTe(`n2`) || ~transferE(`n1`)
~epEQe(`n2`) || ~epLTe(`n1`) || ~transferE(`n2`)
# F. \forall n1 . \forall n2 . (n1 != n2) -> (epEQe(n1) && epLTe(n2)) -> ~held(n1)
~~held(`n1`) || ~epEQe(`n1`) || ~epLTe(`n2`)
~~held(`n2`) || ~epEQe(`n2`) || ~epLTe(`n1`)
# G. \forall n1 . \forall n2 . (n1 != n2) -> (epEQe(n1) && epLTe(n2)) -> ~transferE(n1)
~epEQe(`n1`) || ~epLTe(`n2`) || ~transferE(`n2`)
~epEQe(`n2`) || ~epLTe(`n1`) || ~transferE(`n1`)
# H. \forall n1 . \forall n2 . (n1 != n2) -> (epEQe(n1) && epLTe(n2)) -> held(n2)
~held(`n2`) || ~epEQe(`n1`)  || ~epLTe(`n2`)
~held(`n1`) || ~epEQe(`n2`)  || ~epLTe(`n1`)
# I. \forall n1 . \forall n2 . (n1 != n2) -> (epEQe(n1) && epLTe(n2)) -> lockedE(n2)
~epEQe(`n1`) || ~epLTe(`n2`) || ~lockedE(`n2`)
~epEQe(`n2`) || ~epLTe(`n1`) || ~lockedE(`n1`)
# J. \exists n . transferE(n) -> \exists n' . ~epLTe(n')
~epLTe(`n1`) || ~epLTe(`n2`) || transferE(`n1`) || transferE(`n2`)
# K. \exists n . ~transferE(n) -> \exists n' . epLTe(n')
~epLTe(`n1`) || ~epLTe(`n2`) || ~transferE(`n1`) || ~transferE(`n2`)