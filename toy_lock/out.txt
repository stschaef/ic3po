sat
(
  ;; universe for Epoch:
  ;;   Epoch!val!6 Epoch!val!0 Epoch!val!1 Epoch!val!2 Epoch!val!3 Epoch!val!4 Epoch!val!5 Epoch!val!7 
  ;; -----------
  ;; definitions for universe elements:
  (declare-fun Epoch!val!6 () Epoch)
  (declare-fun Epoch!val!0 () Epoch)
  (declare-fun Epoch!val!1 () Epoch)
  (declare-fun Epoch!val!2 () Epoch)
  (declare-fun Epoch!val!3 () Epoch)
  (declare-fun Epoch!val!4 () Epoch)
  (declare-fun Epoch!val!5 () Epoch)
  (declare-fun Epoch!val!7 () Epoch)
  ;; cardinality constraint:
  (forall ((x Epoch))
          (or (= x Epoch!val!6)
              (= x Epoch!val!0)
              (= x Epoch!val!1)
              (= x Epoch!val!2)
              (= x Epoch!val!3)
              (= x Epoch!val!4)
              (= x Epoch!val!5)
              (= x Epoch!val!7)))
  ;; -----------
  (define-fun R3 () Bool
    true)
  (define-fun __R6 () Bool
    (forall ((n Node))
  (let ((a!1 (forall ((m Node))
               (let ((a!1 (not (and (= m node0)
                                    (not (= n node2))
                                    (not (= n node0)))))
                     (a!2 (not (and (= m node2)
                                    (not (= m node0))
                                    (not (= n node2))
                                    (not (= n node0)))))
                     (a!3 (not (and (= m node2) (not (= m node0)) (= n node0))))
                     (a!4 (not (and (not (= m node2))
                                    (not (= m node0))
                                    (not (= n node2))
                                    (not (= n node0)))))
                     (a!5 (not (and (= m node2) (not (= m node0)))))
                     (a!6 (not (and (not (= m node2)) (not (= m node0)))))
                     (a!7 (not (and (not (= n node2)) (not (= n node0)))))
                     (a!8 (not (and (= n node2) (not (= n node0))))))
               (let ((a!9 (or (and (not (= m node0))
                                   a!5
                                   a!6
                                   (= n node2)
                                   (not (= n node0))
                                   a!7)
                              (and (= m node0)
                                   a!5
                                   a!6
                                   (= n node2)
                                   (not (= n node0))
                                   a!7)
                              (and (not (= m node0))
                                   a!5
                                   a!6
                                   (not (= n node2))
                                   (not (= n node0)))
                              (and (not (= m node2))
                                   (not (= m node0))
                                   (= n node0)
                                   a!8
                                   a!7)
                              (and (not (= m node2))
                                   (not (= m node0))
                                   (= n node2)
                                   (not (= n node0))
                                   a!7)
                              (and (not (= m node0))
                                   a!5
                                   a!6
                                   (= n node0)
                                   a!8
                                   a!7))))
               (let ((a!10 (and (not (and (= m node0) (= n node0))) a!4 a!9)))
               (let ((a!11 (or (and (not (= m node2))
                                    (not (= m node0))
                                    (= n node0))
                               a!10)))
               (let ((a!12 (or (and (= m node0) (= n node2) (not (= n node0)))
                               (and a!3 a!11))))
                 (or (= m n)
                     (and a!1 a!2 a!12)
                     (and (not (= m node2))
                          (not (= m node0))
                          (= n node2)
                          (not (= n node0))))))))))))
    (or (not (= n node2)) a!1))))
  (define-fun __R1 () Bool
    (forall ((n Node) (m Node)) (or (not (and (= n node2) (= m node2))) (= n m))))
  (define-fun __R2 () Bool
    (forall ((n Node) (m Node) (e Epoch))
  (let ((a!1 (or (and (= e Epoch!val!0) (= m node1))
                 (and (not (= e Epoch!val!7))
                      (not (= e Epoch!val!4))
                      (not (= e Epoch!val!6))
                      (not (= e Epoch!val!5))
                      (not (= e Epoch!val!2))
                      (not (= e Epoch!val!3))
                      (not (= e Epoch!val!0))
                      (= m node0))))
        (a!2 (not (and (= n node2) (not (= n node0)) (= e Epoch!val!6))))
        (a!3 (not (and (= n node2) (not (= n node0)) (= e Epoch!val!7))))
        (a!4 (not (and (= n node2) (not (= n node0)) (= e Epoch!val!0))))
        (a!5 (and (not (= n node2)) (not (= n node0)) (= e Epoch!val!0)))
        (a!6 (not (and (not (= n node2)) (not (= n node0)) (= e Epoch!val!6))))
        (a!7 (not (and (= n node2) (not (= n node0)) (= e Epoch!val!1))))
        (a!8 (not (and (= n node2) (not (= n node0)))))
        (a!9 (not (and (not (= n node2)) (not (= n node0))))))
  (let ((a!10 (or (and (= n node0) a!8 a!9 (= e Epoch!val!0))
                  (and (not (= n node0)) a!8 a!9 (= e Epoch!val!0))
                  (and (not (= n node0))
                       a!8
                       a!9
                       (= e Epoch!val!4)
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  a!5
                  (and (not (= n node2))
                       (not (= n node0))
                       (= e Epoch!val!3)
                       (not (= e Epoch!val!0)))
                  (and (= n node0)
                       a!8
                       a!9
                       (= e Epoch!val!3)
                       (not (= e Epoch!val!0)))
                  (and (not (= n node0))
                       a!8
                       a!9
                       (= e Epoch!val!6)
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  (and (not (= n node0))
                       a!8
                       a!9
                       (= e Epoch!val!2)
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  (and (= n node0)
                       a!8
                       a!9
                       (= e Epoch!val!4)
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  (and (not (= n node2))
                       (not (= n node0))
                       (= e Epoch!val!4)
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  (and (not (= n node2))
                       (not (= n node0))
                       (= e Epoch!val!7)
                       (not (= e Epoch!val!4))
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  (and (not (= n node0))
                       a!8
                       a!9
                       (= e Epoch!val!3)
                       (not (= e Epoch!val!0)))
                  (and (not (= n node0))
                       a!8
                       a!9
                       (= e Epoch!val!7)
                       (not (= e Epoch!val!4))
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))
                  (and (= n node2)
                       (not (= n node0))
                       a!9
                       (= e Epoch!val!3)
                       (not (= e Epoch!val!0))))))
  (let ((a!11 (and (not (and (= n node0) (= e Epoch!val!7))) a!6 a!7 a!10)))
  (let ((a!12 (or a!5
                  (and (= n node0) (= e Epoch!val!0))
                  (and (= n node0) (= e Epoch!val!3))
                  a!11
                  (and (not (= n node2)) (not (= n node0)) (= e Epoch!val!7)))))
  (let ((a!13 (and (not (and (= n node0) (= e Epoch!val!6)))
                   a!2
                   (or (and (= n node0) (= e Epoch!val!4)) (and a!3 a!4 a!12)))))
  (let ((a!14 (or (and (not (= n node2)) (not (= n node0)) (= e Epoch!val!4))
                  (and (not (= n node2)) (not (= n node0)) (= e Epoch!val!3))
                  (and (= n node2) (not (= n node0)) (= e Epoch!val!3))
                  a!13)))
    (or (not a!1) (not (and (= n node2) (not a!14))))))))))))
  (define-fun R4 () Bool
    true)
  (define-fun __R3 () Bool
    (forall ((n Node) (m Node) (e Epoch))
  (let ((a!1 (or (and (= e Epoch!val!0) (= n node1))
                 (and (not (= e Epoch!val!7))
                      (not (= e Epoch!val!4))
                      (not (= e Epoch!val!6))
                      (not (= e Epoch!val!5))
                      (not (= e Epoch!val!2))
                      (not (= e Epoch!val!3))
                      (not (= e Epoch!val!0))
                      (= n node0))))
        (a!2 (or (and (= e Epoch!val!0) (= m node1))
                 (and (not (= e Epoch!val!7))
                      (not (= e Epoch!val!4))
                      (not (= e Epoch!val!6))
                      (not (= e Epoch!val!5))
                      (not (= e Epoch!val!2))
                      (not (= e Epoch!val!3))
                      (not (= e Epoch!val!0))
                      (= m node0)))))
    (or (not (and a!1 a!2)) (= n m)))))
  (define-fun R1 () Bool
    true)
  (define-fun R () Bool
    true)
  (define-fun zero () Epoch
    Epoch!val!5)
  (define-fun __R4 () Bool
    (forall ((n Node) (e Epoch))
  (let ((a!1 (not (and (= e Epoch!val!4)
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0))
                       (= n node2)))))
    (or a!1 (= n node2)))))
  (define-fun I () Bool
    false)
  (define-fun P () Bool
    true)
  (define-fun __R5 () Bool
    (exists ((e Epoch) (m1 Node))
  (let ((a!1 (or (and (= e Epoch!val!0) (= m1 node1))
                 (and (not (= e Epoch!val!7))
                      (not (= e Epoch!val!4))
                      (not (= e Epoch!val!6))
                      (not (= e Epoch!val!5))
                      (not (= e Epoch!val!2))
                      (not (= e Epoch!val!3))
                      (not (= e Epoch!val!0))
                      (= m1 node0))))
        (a!2 (forall ((m2 Node))
               (let ((a!1 (not (and (= m2 node2)
                                    (not (= m2 node0))
                                    (= e Epoch!val!6))))
                     (a!2 (not (and (= m2 node2)
                                    (not (= m2 node0))
                                    (= e Epoch!val!7))))
                     (a!3 (not (and (= m2 node2)
                                    (not (= m2 node0))
                                    (= e Epoch!val!0))))
                     (a!4 (not (and (not (= m2 node2))
                                    (not (= m2 node0))
                                    (= e Epoch!val!6))))
                     (a!5 (not (and (= m2 node2)
                                    (not (= m2 node0))
                                    (= e Epoch!val!1))))
                     (a!6 (not (and (= m2 node2) (not (= m2 node0)))))
                     (a!7 (not (and (not (= m2 node2)) (not (= m2 node0)))))
                     (a!8 (and (not (= m2 node2))
                               (not (= m2 node0))
                               (= e Epoch!val!0))))
               (let ((a!9 (or (and (= m2 node0) a!6 a!7 (= e Epoch!val!0))
                              (and (not (= m2 node2))
                                   (not (= m2 node0))
                                   (= e Epoch!val!4)
                                   (not (= e Epoch!val!6))
                                   (not (= e Epoch!val!5))
                                   (not (= e Epoch!val!2))
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0)))
                              (and (= m2 node2)
                                   (not (= m2 node0))
                                   a!7
                                   (= e Epoch!val!3)
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node0))
                                   a!6
                                   a!7
                                   (= e Epoch!val!6)
                                   (not (= e Epoch!val!5))
                                   (not (= e Epoch!val!2))
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node0)) a!6 a!7 (= e Epoch!val!0))
                              (and (not (= m2 node2))
                                   (not (= m2 node0))
                                   (= e Epoch!val!3)
                                   (not (= e Epoch!val!0)))
                              (and (= m2 node0)
                                   a!6
                                   a!7
                                   (= e Epoch!val!3)
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node0))
                                   a!6
                                   a!7
                                   (= e Epoch!val!7)
                                   (not (= e Epoch!val!4))
                                   (not (= e Epoch!val!6))
                                   (not (= e Epoch!val!5))
                                   (not (= e Epoch!val!2))
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node0))
                                   a!6
                                   a!7
                                   (= e Epoch!val!3)
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node2))
                                   (not (= m2 node0))
                                   (= e Epoch!val!7)
                                   (not (= e Epoch!val!4))
                                   (not (= e Epoch!val!6))
                                   (not (= e Epoch!val!5))
                                   (not (= e Epoch!val!2))
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node0))
                                   a!6
                                   a!7
                                   (= e Epoch!val!2)
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0)))
                              (and (not (= m2 node0))
                                   a!6
                                   a!7
                                   (= e Epoch!val!4)
                                   (not (= e Epoch!val!6))
                                   (not (= e Epoch!val!5))
                                   (not (= e Epoch!val!2))
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0)))
                              a!8
                              (and (= m2 node0)
                                   a!6
                                   a!7
                                   (= e Epoch!val!4)
                                   (not (= e Epoch!val!6))
                                   (not (= e Epoch!val!5))
                                   (not (= e Epoch!val!2))
                                   (not (= e Epoch!val!3))
                                   (not (= e Epoch!val!0))))))
               (let ((a!10 (and (not (and (= m2 node0) (= e Epoch!val!7)))
                                a!4
                                a!5
                                a!9)))
               (let ((a!11 (or (and (= m2 node0) (= e Epoch!val!3))
                               (and (= m2 node0) (= e Epoch!val!0))
                               (and (not (= m2 node2))
                                    (not (= m2 node0))
                                    (= e Epoch!val!7))
                               a!10
                               a!8)))
               (let ((a!12 (and (not (and (= m2 node0) (= e Epoch!val!6)))
                                a!1
                                (or (and (= m2 node0) (= e Epoch!val!4))
                                    (and a!2 a!3 a!11)))))
                 (or (and (= m2 node2) (not (= m2 node0)) (= e Epoch!val!3))
                     (and (not (= m2 node2))
                          (not (= m2 node0))
                          (= e Epoch!val!4))
                     (and (not (= m2 node2))
                          (not (= m2 node0))
                          (= e Epoch!val!3))
                     a!12)))))))))
    (and a!1 a!2))))
  (define-fun concrete_R () Bool
    (exists ((e Epoch))
  (let ((a!1 (not (and (not (= e Epoch!val!7))
                       (not (= e Epoch!val!4))
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))))
        (a!2 (not (and (= e Epoch!val!4)
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0))))))
  (let ((a!3 (or (and a!1
                      (not (= e Epoch!val!0))
                      (= e Epoch!val!4)
                      (not (= e Epoch!val!6))
                      (not (= e Epoch!val!5))
                      (not (= e Epoch!val!2))
                      (not (= e Epoch!val!3)))
                 (and a!1 (= e Epoch!val!0) a!2)
                 (and (not (= e Epoch!val!7))
                      (not (= e Epoch!val!4))
                      (not (= e Epoch!val!6))
                      (not (= e Epoch!val!5))
                      (not (= e Epoch!val!2))
                      (not (= e Epoch!val!3))
                      (not (= e Epoch!val!0))
                      a!2))))
    (and (forall ((n Node))
           (let ((a!1 (or (and (= n node1) (not (= n node0))) (= n node2)))
                 (a!2 (not (and (not (= n node1))
                                (not (= n node0))
                                (not (= n node2)))))
                 (a!3 (not (and (= n node0) (not (= n node2))))))
           (let ((a!4 (or (and (= e Epoch!val!7)
                               (not (= e Epoch!val!4))
                               (not (= e Epoch!val!6))
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (= e Epoch!val!5)
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (= n node0)
                               (not (= n node2))
                               (not a!1)
                               a!2)
                          (and (= e Epoch!val!0)
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (= e Epoch!val!5)
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               a!1
                               a!2)
                          (and (= e Epoch!val!4)
                               (not (= e Epoch!val!6))
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (= e Epoch!val!5)
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               a!3
                               (not a!1)
                               a!2)
                          (and (= e Epoch!val!2)
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (= e Epoch!val!6)
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (= n node0)
                               (not (= n node2))
                               (not a!1)
                               a!2)
                          (and (not (= e Epoch!val!7))
                               (not (= e Epoch!val!4))
                               (not (= e Epoch!val!6))
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               a!1
                               a!2)
                          (and (= e Epoch!val!6)
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (not (= e Epoch!val!7))
                               (not (= e Epoch!val!4))
                               (not (= e Epoch!val!6))
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (= n node0)
                               (not (= n node2))
                               (not a!1)
                               a!2)
                          (and (= e Epoch!val!2)
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (= n node0)
                               (not (= n node2))
                               (not a!1)
                               a!2)
                          (and (not (= e Epoch!val!7))
                               (not (= e Epoch!val!4))
                               (not (= e Epoch!val!6))
                               (not (= e Epoch!val!5))
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (= e Epoch!val!5)
                               (not (= e Epoch!val!2))
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               (not (= n node1))
                               (not (= n node0))
                               (not (= n node2)))
                          (and (= e Epoch!val!2)
                               (not (= e Epoch!val!3))
                               (not (= e Epoch!val!0))
                               a!1
                               a!2))))
             (not a!4))))
         (exists ((m Node))
           (let ((a!1 (ite (= m node2)
                           Epoch!val!6
                           (ite (= m node0)
                                Epoch!val!7
                                (ite (= m node1) Epoch!val!6 Epoch!val!3)))))
             (= e a!1)))
         a!3)))))
  (define-fun R5 () Bool
    true)
  (define-fun R6 () Bool
    true)
  (define-fun R2 () Bool
    true)
  (define-fun __concrete_R () Bool
    (forall ((e Epoch))
  (let ((a!1 (not (and (= e Epoch!val!4)
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0)))))
        (a!2 (not (and (not (= e Epoch!val!7))
                       (not (= e Epoch!val!4))
                       (not (= e Epoch!val!6))
                       (not (= e Epoch!val!5))
                       (not (= e Epoch!val!2))
                       (not (= e Epoch!val!3))
                       (not (= e Epoch!val!0))))))
    (or (and a!1 a!2 (not (= e Epoch!val!0)))
        (and (= e Epoch!val!4)
             (not (= e Epoch!val!6))
             (not (= e Epoch!val!5))
             (not (= e Epoch!val!2))
             (not (= e Epoch!val!3))
             (not (= e Epoch!val!0))
             a!2)))))
  (define-fun T () Bool
    true)
  (define-fun __R () Bool
    false)
  (define-fun __P () Bool
    false)
  (define-fun __R7 () Bool
    false)
  (define-fun R7 () Bool
    false)
  (define-fun __transfer ((x!0 Epoch) (x!1 Node)) Bool
    (or (and (= x!0 Epoch!val!0) (= x!1 node1))
        (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 node0))))
  (define-fun held ((x!0 Node)) Bool
    false)
  (define-fun __held ((x!0 Node)) Bool
    (= x!0 node2))
  (define-fun lt ((x!0 Epoch) (x!1 Epoch)) Bool
    (or (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!6)
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!2)
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!6)
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (not (= x!1 Epoch!val!7))
             (not (= x!1 Epoch!val!4))
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!0))
        (and (= x!0 Epoch!val!2)
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!7)
             (not (= x!1 Epoch!val!4))
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!7)
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!4)
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!7)
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!0))
        (and (= x!0 Epoch!val!2)
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!0))
        (and (= x!0 Epoch!val!4)
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!3)
             (not (= x!1 Epoch!val!0)))
        (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!3)
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!2)
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!4)
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!7)
             (not (= x!1 Epoch!val!4))
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!6)
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!4)
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!2)
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!6)
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!3)
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!6)
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!0))
        (and (= x!0 Epoch!val!0) (= x!1 Epoch!val!3) (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!2)
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!3)
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!6)
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!7)
             (not (= x!1 Epoch!val!4))
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!6)
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!0))
        (and (= x!0 Epoch!val!7)
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!3)
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!0)
             (= x!1 Epoch!val!4)
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!7)
             (not (= x!1 Epoch!val!4))
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!3)
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!5)
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!4)
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))
        (and (= x!0 Epoch!val!2)
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 Epoch!val!4)
             (not (= x!1 Epoch!val!6))
             (not (= x!1 Epoch!val!5))
             (not (= x!1 Epoch!val!2))
             (not (= x!1 Epoch!val!3))
             (not (= x!1 Epoch!val!0)))))
  (define-fun __is_max ((x!0 Node)) Bool
    (= x!0 node2))
  (define-fun is_max ((x!0 Node)) Bool
    (= x!0 node0))
  (define-fun ep ((x!0 Node)) Epoch
    (ite (= x!0 node2) Epoch!val!6
    (ite (= x!0 node0) Epoch!val!7
    (ite (= x!0 node1) Epoch!val!6
      Epoch!val!3))))
  (define-fun locked ((x!0 Epoch) (x!1 Node)) Bool
    false)
  (define-fun __lt ((x!0 Epoch) (x!1 Epoch)) Bool
    (ite (and (= x!0 Epoch!val!4) (= x!1 Epoch!val!1)) false
    (ite (and (= x!0 Epoch!val!6) (= x!1 Epoch!val!6)) false
    (ite (and (= x!0 Epoch!val!7) (= x!1 Epoch!val!7)) false
    (ite (and (= x!0 Epoch!val!7) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!7) (= x!1 Epoch!val!0)) true
    (ite (and (= x!0 Epoch!val!6) (= x!1 Epoch!val!0)) true
    (ite (and (= x!0 Epoch!val!6) (= x!1 Epoch!val!7)) true
    (ite (and (= x!0 Epoch!val!4) (= x!1 Epoch!val!0)) false
    (ite (and (= x!0 Epoch!val!4) (= x!1 Epoch!val!7)) false
    (ite (and (= x!0 Epoch!val!7) (= x!1 Epoch!val!4)) true
    (ite (and (= x!0 Epoch!val!4) (= x!1 Epoch!val!6)) false
    (ite (and (= x!0 Epoch!val!7) (= x!1 Epoch!val!6)) false
    (ite (and (= x!0 Epoch!val!6) (= x!1 Epoch!val!4)) true
    (ite (and (= x!0 Epoch!val!0) (= x!1 Epoch!val!4)) true
    (ite (and (= x!0 Epoch!val!6) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!2) (= x!1 Epoch!val!0)) true
    (ite (and (= x!0 Epoch!val!2) (= x!1 Epoch!val!4)) true
    (ite (and (= x!0 Epoch!val!2) (= x!1 Epoch!val!7)) true
    (ite (and (= x!0 Epoch!val!2) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!1) (= x!1 Epoch!val!0)) true
    (ite (and (= x!0 Epoch!val!1) (= x!1 Epoch!val!4)) true
    (ite (and (= x!0 Epoch!val!0) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!1) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!1) (= x!1 Epoch!val!6)) true
    (ite (and (= x!0 Epoch!val!1) (= x!1 Epoch!val!7)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!1)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!0)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!4)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!6)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!7)) true
    (ite (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!2)) true
    (ite (and (= x!0 Epoch!val!2) (= x!1 Epoch!val!6)) true
    (ite (and (= x!0 Epoch!val!4) (= x!1 Epoch!val!3)) true
    (ite (and (= x!0 Epoch!val!1) (= x!1 Epoch!val!2)) true
      (lt x!0 x!1)))))))))))))))))))))))))))))))))))))
  (define-fun __ep ((x!0 Node)) Epoch
    (ite (= x!0 node0) Epoch!val!7
    (ite (= x!0 node2) Epoch!val!4
      Epoch!val!6)))
  (define-fun __locked ((x!0 Epoch) (x!1 Node)) Bool
    (and (= x!0 Epoch!val!4)
         (not (= x!0 Epoch!val!6))
         (not (= x!0 Epoch!val!5))
         (not (= x!0 Epoch!val!2))
         (not (= x!0 Epoch!val!3))
         (not (= x!0 Epoch!val!0))
         (= x!1 node2)))
  (define-fun transfer ((x!0 Epoch) (x!1 Node)) Bool
    (or (and (not (= x!0 Epoch!val!7))
             (not (= x!0 Epoch!val!4))
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 node0))
        (and (= x!0 Epoch!val!4)
             (not (= x!0 Epoch!val!6))
             (not (= x!0 Epoch!val!5))
             (not (= x!0 Epoch!val!2))
             (not (= x!0 Epoch!val!3))
             (not (= x!0 Epoch!val!0))
             (= x!1 node2))
        (and (= x!0 Epoch!val!0) (= x!1 node1))))
)
